@using MVC_Classifieds.Api.Models.Users
@using MVC_News.MVC.Models.Partials
@using MVC_News.MVC.Models.Users
@using MVC_News.MVC.Helpers
@model CheckoutSubscriptionPageModel;

@{
    ViewData["Title"] = "Checkout Subscription";

    string timeLabel = null!;
    string priceLabel = null!;

    if (Model.Duration == 1)
    {
        timeLabel = "1 Month Subscription";
        priceLabel = "20$ Per Month";
    }

    else if (Model.Duration == 2)
    {
        timeLabel = "6 Month Subscription";
        priceLabel = "17$ Per Month";
    }

    else if (Model.Duration == 3)
    {
        timeLabel = "1 Year Subscription";
        priceLabel = "12$ Per Month";
    }
}

<form class="mixin-page-like mixin-page-base mixin-content-grid" action="/users/checkout-subscription" method="post">
    <header data-role="page-section" data-track="base">
        <div class="token-default-title">
            Checkout Subscription
        </div>
    </header>
    <hr data-track="base" class="token-x-divider" />
    <div data-track="base" data-role="page-section">
        <section class="mixin-Scard-like mixin-Scard-base theme-Scard-generic-white token-default-shadow border token-default-border-color">
            <section data-role="section">
                <div class="token-card--header--primary-text">
                    @timeLabel
                </div>
                    <div class="token-card--header--secondary-text">
                    @priceLabel
                </div>
            </section>
        </section>
    </div>
    <hr data-track="base" class="token-x-divider" />
    <section class="flex flex-col gap-4" data-role="page-section" data-track="base">
        <input hidden name="duration" value="@Model.Duration" />
        @await Html.PartialAsync("Reusables/_FormErrors", Model.Errors.TryGetValue("_", out var formErrors) ? formErrors : null)
        @await Html.PartialAsync("Reusables/_FormField", new FormFieldVPartialiewModel(
            label: "Dummy First Name",
            errors: UtilityHelpers.GetErrorsOrNull(Model.Errors, "FirstName"),
            partialRoute: "Reusables/_CharField",
            partialProps: new CharFieldPartialViewModel(
                value: "",
                name: "firstName",
                inputAttrs: new Dictionary<string, string>()
                {
                    { "type", "text" }
                }
            )
        ))
        @await Html.PartialAsync("Reusables/_FormField", new FormFieldVPartialiewModel(
            label: "Dummy Last Name",
            errors: UtilityHelpers.GetErrorsOrNull(Model.Errors, "LastName"),
            partialRoute: "Reusables/_CharField",
            partialProps: new CharFieldPartialViewModel(
                value: "",
                name: "lastName",
                inputAttrs: new Dictionary<string, string>()
                {
                    { "type", "text" }
                }
            )
        ))
        @await Html.PartialAsync("Reusables/_FormField", new FormFieldVPartialiewModel(
            label: "Dummy Street",
            errors: UtilityHelpers.GetErrorsOrNull(Model.Errors, "Street"),
            partialRoute: "Reusables/_CharField",
            partialProps: new CharFieldPartialViewModel(
                value: "",
                name: "street",
                inputAttrs: new Dictionary<string, string>()
                {
                    { "type", "text" }
                }
            )
        ))
        @await Html.PartialAsync("Reusables/_FormField", new FormFieldVPartialiewModel(
            label: "Dummy Zip",
            errors: UtilityHelpers.GetErrorsOrNull(Model.Errors, "Zip"),
            partialRoute: "Reusables/_CharField",
            partialProps: new CharFieldPartialViewModel(
                value: "",
                name: "zip",
                inputAttrs: new Dictionary<string, string>()
                {
                    { "type", "text" }
                }
            )
        ))
    </section>
    <footer class="flex flex-row gap-4 justify-end" data-role="page-section" data-track="base">
        <button class="mixin-Sbutton-like mixin-Sbutton-base theme-Sbutton-generic-white" type="reset">
            Reset
        </button>
        <button class="mixin-Sbutton-like mixin-Sbutton-base theme-Sbutton-generic-green" type="submit">
            Checkout
        </button>
    </footer>
</form>