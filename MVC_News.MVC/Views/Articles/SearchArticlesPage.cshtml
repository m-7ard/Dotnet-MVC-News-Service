@using MVC_News.MVC.Models.Articles;
@using MVC_News.MVC.Models.Partials;
@model SearchArticlesPageModel;
@{
    ViewData["Title"] = "Search Articles";
}

<div class="mixin-page-like mixin-page-base mixin-content-grid">
    <div class="flex flex-col gap-2" data-track="base">
        <form class="flex flex-row gap-2">
            @if (Model.AuthorId is not null)
            {
                <input hidden name="authorId" value="@Model.AuthorId" />
            }
            @if (Model.Title is not null)
            {
                <input hidden name="title" value="@Model.Title" />
            }
            @if (Model.CreatedAfter is not null)
            {
                <input hidden name="createdAfter" value="@Model.CreatedAfter" />
            }
            @if (Model.CreatedBefore is not null)
            {
                <input hidden name="createdBefore" value="@Model.CreatedBefore" />
            }
            @if (Model.OrderBy is not null)
            {
                <input hidden name="orderBy" value="@Model.OrderBy" />
            }
            @if (Model.LimitBy is not null)
            {
                <input hidden name="limitBy" value="@Model.LimitBy" />
            }
            @if (Model.Tags is not null && Model.Tags.Count() > 0)
            {
                <input hidden name="tags" />
                @foreach (var tag in Model.Tags)
                {
                    <input hidden name="tags" value="@tag" />
                }
            }

            @await Html.PartialAsync("Reusables/_CharField", new CharFieldPartialViewModel(
                value: Model.Title ?? "",
                name: "title",
                inputAttrs: new Dictionary<string, string>()
                {
                    { "type", "text" }
                }
            ))
            <button class="mixin-button-like mixin-button-base theme-button-generic-white">
                Search
            </button>
        </form>
        <header class="flex flex-row gap-[inherit] items-center justify-between">
            <div class="text-xl">
                <span class="font-bold">
                    Viewing Results For
                </span>
                <span>
                    "@Model.Title"
                </span>
            </div>
        </header>
        <div class="flex flex-col gap-4">
            @foreach (var article in Model.Articles)
            {
                <div class="flex flex-row gap-2 overflow-hidden">
                    <a href="/articles/@article.Id" class="basis-1/3">
                        @await Html.PartialAsync("Reusables/_CoverImage", new CoverImagePartialViewModel(
                            className: "aspect-[16/9] grow border border-gray-900",
                            src: article.HeaderImage
                        ))
                    </a>
                    <div class="flex flex-col gap-2 basis-2/3">
                        <div class="flex flex-row gap-2 flex-wrap">
                            @foreach (var tag in article.Tags)
                            {
                                <div class="text-sm text-gray-800">
                                    @tag
                                </div>
                            }
                        </div>
                        <a href="/articles/@article.Id">
                            <div class="text-xl font-bold line-clamp-2 hover:underline">
                                @article.Title
                            </div>
                        </a>
                        <div class="line-clamp-2 max-h-[2lh] text-sm text-gray-600">
                            re:publica 25 will take place from 26-28 May 2025 at STATION Berlin. The motto for next years
                            festival for the digital society is “Generation XYZ”. The programme will once again bring the
                            most important topics relating to the internet, its communities and the opportunities and
                            challenges that lie in the digitalization of society to the stages. Join us!
                        </div>
                        <div class="flex flex-row gap-2 justify-between items-center">
                            <div class="text-xs">
                                @article.Author.DisplayName
                            </div>
                            <div class="text-xs text-gray-500">
                                @article.DateCreated.ToLocalTime()
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

</div>